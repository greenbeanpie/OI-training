{
	// Place your OI-training 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"C++ template": {
		"scope": "cpp",
		"prefix": "cpp",
		"description": "Default cpp file",
		"body": [
			"#include <bits/stdc++.h>",
			"#include <bits/extc++.h>",
			"using namespace __gnu_pbds;",
			"using namespace __gnu_cxx;",
			"using namespace std;",
			"#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4.1,sse4.2,avx,avx2,popcnt,tune=native\")",
			"#define int long long",
			"#define double long double",
			"#define endl \"\\n\"",
			"",
			"",
			"",
			"signed main(){",
			"#ifndef ONLINE_JUDGE",
		 "	freopen(\".in\",\"r\",stdin);",
		 "	freopen(\".out\",\"w\",stdout);",
			"#endif",
		 "	ios::sync_with_stdio(false);",
		 "	cin.tie(0),cout.tie(0);",
		 "	",
		 "	return 0;",
			"}"
		]
	},
}